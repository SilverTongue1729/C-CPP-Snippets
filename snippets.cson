# I shall keep adding more snippets as I keep getting ideas
# Other than these, I highly recommend checking out Atom's default snippets from the language-c package
# Or https://github.com/textmate/c.tmbundle
'.source.cpp':
  'for_loop':
    'prefix': 'f_'
    'body': 'for_(${1:i},0,n){\n}'

  'for loop':
    'prefix': 'for'
    'body': 'for ($1){\n}'

  'while':
    'prefix': 'while'
    'body': 'while ($1){\n}'

  'do while':
    'prefix': 'do'
    'body': 'do {\n\t$1\n} while();'

  'cin':
    'prefix': 'cin'
    'body': 'cin >> $1;'

  'cout':
    'prefix': 'cout'
    'body': 'cout << $1;'

  '#define':
    'prefix': 'def'
    'body': '#define $1'

  '#include <>':
    'prefix': 'Inc'
    'body': '#include <${1:bits/stdc++.h}>'

  'if':
    'prefix': 'if'
    'body': 'if ($1){\n}'

  'if else':
    'prefix': 'ife'
    'body': 'if ($1){\n}\nelse{\n\t\n}'

  'if elseif':
    'prefix': 'iff'
    'body': 'if ($1){\n}\nelse if(){\n\t\n}'

  'if elseif else':
    'prefix': 'iffe'
    'body': 'if ($1){\n}\nelse if(){\n\t\n}\nelse{\n\t\n}'

  'else if ':
    'prefix': 'eif'
    'body': 'else if ($1){\n}'

  'switch':
    'prefix': 'switch'
    'body': 'switch ($1) {\n\tcase :\n\t\tbreak;\n}'

  'case':
    'prefix': 'case'
    'body': 'case $1: \n\tbreak;'

  'main()':
    'prefix': 'main'
    'body': 'int main(){\n\t$1\n\treturn 0;\n}'

  'printf':
    'prefix': 'printf'
    'body': 'printf("%d$1", );'

  'scanf':
    'prefix': 'scanf'
    'body': 'scanf("%d$1", &);'

  'int':
    'prefix': 'int'
    'body': 'int $1;'

  'long long':
    'prefix': 'll'
    'body': 'll $1;'

  'vector':
    'prefix': 'vector'
    'body': 'vector<${1:int}> (LIM1,0);'

  'string':
    'prefix': 'str'
    'body': 'string $1;'

  'struct':
    'prefix': 'st'
    'body': 'struct $1{\n};'

  'void':
    'prefix': 'void'
    'body': 'void $1(){\n}'

  'typedef':
    'prefix': 'td'
    'body': 'typedef ${1:int};'

  'using namespace':
    'prefix': 'using'
    'body': 'using namespace ${1:std};'

  'namespace':
    'prefix': 'ns'
    'body': 'namespace $1{\n}'

  'template <typename>':
    'prefix': 'tp'
    'body': 'template <typename $1>'
